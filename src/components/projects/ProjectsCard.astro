---
import Enlaces from "../enlaces.astro";
import EnlacesButton from "../../icons/EnlacesButton.astro";
import Github from "../../icons/networks/Github.astro";
interface Tag {
  name: string;
  class: string;
  icon: any;
}

export interface ProjectProps {
  title: string;
  description: string;
  image: string;
  link: string;
  github?: string;
  tags: Array<any>;
}

const { title, description, image, link, github, tags } = Astro.props;
---

<article class="card">
  <header class="card-header">
    <img src={image} alt={title} width="300" height="250" />
  </header>

  <div class="card-content">
    <ul class="tags">
      {
        tags.map((tag: Tag) => (
          <li>
            <span class={tag.class}>
              <tag.icon />
              {tag.name}
            </span>
          </li>
        ))
      }
    </ul>
    <h1>{title}</h1>

    <p>{description}</p>

    <footer>
      {
        github && (
          <Enlaces href={github}>
            <Github />
            Code
          </Enlaces>
        )
      }
      {
        link && (
          <Enlaces href={link}>
            <EnlacesButton />
            Preview
          </Enlaces>
        )
      }
    </footer>
  </div>
</article>

<style>
  .card {
    background-color: var(--background-600);
    border: 1px solid var(--background-500);
    backdrop-filter: blur(10px);
    border-radius: 24px;
    padding: 1.4rem;
    transition: 0.3s ease-in-out;


    .card-header {
      border-radius;
      overflow: hidden;
      position: relative;
      margin-bottom: 1.4rem;

      img {
        display: block;
        width: 100%;
        object-fit: cover;
        transition: 0.3s ease-in-out;
        border-radius: 16px;
      }
    }
    &:hover {
      background-color: var(--background-500);
    }

    .card-content {

      h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
      }

      p {
        font-size: 1.1rem;
        line-height: 1.5;
        color: var(--text-500);
        margin-bottom: 1rem;
      }
    }

    footer {
      display: flex;
      gap: 1rem;
    }
  }

  .tags {
    margin-bottom: 1rem;
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    padding: 0;
  }

  .tags li span {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    border-radius: 9999px;
    transition: all 0.2s ease;
  }

  .tags li span svg {
    width: 1rem;
    height: 1rem;
  }

  .tags li .css {
    background-color: #2b437a;
    color: white;
    box-shadow: 0 1px 2px rgba(41, 101, 241, 0.3);

    &:hover {
      background-color: #0a4bda;
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(41, 101, 241, 0.4);
    }
  }

  .tags li .NextJS {
    background-color: #000000;
    color: white;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);

    &:hover {
      background-color: #141414; /* Slightly lighter on hover */
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }
  }
</style>
